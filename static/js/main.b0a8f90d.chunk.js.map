{"version":3,"sources":["MyComponent.js","Name.js","ThingILike.js","FunFact.js","Example.js","App.js","reportWebVitals.js","index.js"],"names":["MyComponent","Name","props","customName","ThingILike","listItems","map","thing","FunFact","fact","item","Example","useState","count","setCount","useEffect","document","title","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0LAIeA,G,WAFK,kBAAM,+DCMXC,EANF,SAACC,GAEV,OACI,6BAAKA,EAAMC,cCWJC,EAdI,WACf,IAEMC,EAFc,CAAC,WAAY,SAAU,YAEbC,KAAI,SAAAC,GAAK,OACnC,6BAAKA,OAGT,OACI,6BACKF,KCYEG,EApBC,WAWZ,OACI,6BAXY,CACZ,CACIC,KAAM,sCAEV,CACIA,KAAM,wBAODH,KAAI,SAACI,GAAD,OACX,6BAAKA,EAAKD,a,OCOLE,EAtBC,WAAM,MAIQC,mBAAS,GAJjB,mBAIXC,EAJW,KAIJC,EAJI,KAWlB,OAJAC,qBAAU,WACNC,SAASC,MAAT,sBAAgCJ,EAAhC,aAIA,gCACI,8CAAiBA,EAAjB,YACA,wBAAQK,QAAS,kBAAMJ,EAASD,EAAQ,IAAxC,0BCMGM,MAff,WAGE,OACE,sBAAKC,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAMjB,WAAW,SACjB,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASiB,eAAe,SAM1BZ,K","file":"static/js/main.b0a8f90d.chunk.js","sourcesContent":["import React from 'react';\n\nconst MyComponent = () => <div>immediately returned html!</div>\n\nexport default MyComponent;","import React from 'react';\n\nconst Name = (props) => {\n\n    return (\n        <h1>{props.customName}</h1>\n    )\n}\nexport default Name;","import React from 'react';\n\nconst ThingILike = () => {\n    const thingsILike = ['Painting', 'Coding', 'Sleeping'];\n    \n    const listItems = thingsILike.map(thing =>\n        <li>{thing}</li>\n    );\n\n    return (\n        <ul>\n            {listItems}\n        </ul>\n    );\n}\n\nexport default ThingILike;","import React from 'react';\nimport './App.css';\n\nconst FunFact = () => {\n    const funFact = [\n        {\n            fact: 'I was named after another \"Terry\".'\n        },\n        {\n            fact: 'I am from New York.'\n        }\n\n    ];\n\n    return (\n        <ul>\n        {funFact.map((item) => (\n          <li>{item.fact}</li>\n        ))}\n      </ul>\n    );\n}\n\nexport default FunFact;","import React, { useState, useEffect } from 'react';\n\nconst Example = () => {\n\n    //first variable is a getter\n    //second is a setter\n    const [count, setCount] = useState(0);\n\n    //Similar to componentDidMount and componenrDidUpdate:\n    useEffect(() => {\n        document.title = `You clicked ${count} times`;\n    })\n\n    return (\n        <div>\n            <p>You clicked  {count} times</p>\n            <button onClick={() => setCount(count + 1)}>\n                Click me\n            </button>\n        </div>\n\n    );\n}\n\nexport default Example;","import './App.css';\nimport MyComponent from './MyComponent';\nimport Name from './Name';\nimport ThingILike from './ThingILike';\nimport FunFact from './FunFact';\nimport Example from './Example';\n\nfunction App() {\n\n  // const x = 4;\n  return (\n    <div className=\"App\">\n      <h1>Hello World!</h1>\n      <MyComponent />\n      <Name customName=\"Teri\"/>\n      <ThingILike />\n      <FunFact />\n      <Example />\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}